# pyproject.toml

[build-system]
requires = ["setuptools>=61.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "aws-config-restore"
version = "0.1.1"
description = "AWS Config Restore tool restore previous configuration recorded in AWS Config Service"
readme = "README.md"
authors = [{ name = "Embratel CCoE", email = "arquitetura-cloud@operacaomulticloud.com" }]
license = { file = "LICENSE" }
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
]
keywords = ["config", "aws", "restore"]
dependencies = [
    "boto3>=1.26.138",
    "botocore>=1.29.138",
    "deepdiff>=6.3.0",
    "jmespath>=1.0.1",
    "ordered-set>=4.1.0",
    "Pygments>=2.15.1",
    "python-dateutil>=2.8.2",
    "s3transfer>=0.6.1",
    "simple-term-menu>=1.6.1",
    "six>=1.16.0",
    "urllib3>=1.26.15",
    "pyyaml"
]
requires-python = ">=3.9"

[project.optional-dependencies]
dev = ["black", "bumpver", "isort", "pip-tools", "pytest"]

[project.urls]
Homepage = "https://github.com/arquitetura-cloud/aws-config-restore"

[tool.bumpver]
current_version = "2023.1001-alpha"
version_pattern = "YYYY.BUILD[-TAG]"
commit_message = "bump version {old_version} -> {new_version}"
commit = true
tag = true
push = true

[tool.bumpver.file_patterns]
"pyproject.toml" = [
    'current_version = "{version}"',
]
"setup.py" = [
    "{version}",
    "{pep440_version}",
]
"README.md" = [
    "{version}",
    "{pep440_version}",
]

[project.scripts]
aws-config-restore = "app.app:main"